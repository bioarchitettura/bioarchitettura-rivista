# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets comprehensive permissions of the GITHUB_TOKEN for maximum compatibility
permissions:
  actions: write
  checks: write
  contents: write
  deployments: write
  id-token: write
  issues: write
  discussions: write
  packages: write
  pages: write
  pull-requests: write
  repository-projects: write
  security-events: write
  statuses: write
 

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site
      - name: Check for blocked.jsonl file
        id: check-blocked-jsonl
        run: |
          if [ -f "/home/runner/work/_temp/runtime-logs/blocked.jsonl" ]; then
            echo "blocked_jsonl_exists=true" >> $GITHUB_OUTPUT
            echo "✅ Found blocked.jsonl file"
          else
            echo "blocked_jsonl_exists=false" >> $GITHUB_OUTPUT
            echo "ℹ️ blocked.jsonl file not found"
          fi

      - name: Check for blocked.* files
        id: check-blocked-files
        run: |
          if ls /home/runner/work/_temp/runtime-logs/blocked.* 1> /dev/null 2>&1; then
            echo "blocked_files_exist=true" >> $GITHUB_OUTPUT
            echo "✅ Found blocked.* files:"
            ls -la /home/runner/work/_temp/runtime-logs/blocked.* 2>/dev/null || true
          else
            echo "blocked_files_exist=false" >> $GITHUB_OUTPUT
            echo "ℹ️ No blocked.* files found"
          fi

      - name: Upload blocked.jsonl artifact
        if: steps.check-blocked-jsonl.outputs.blocked_jsonl_exists == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: blocked-jsonl-logs
          path: /home/runner/work/_temp/runtime-logs/blocked.jsonl
          retention-days: 30

      - name: Upload blocked.* artifacts
        if: steps.check-blocked-files.outputs.blocked_files_exist == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: blocked-files-logs
          path: /home/runner/work/_temp/runtime-logs/blocked.*
          retention-days: 30

      - name: Upload pages artifact
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
