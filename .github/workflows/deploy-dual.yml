name: Deploy to GitHub Pages and Netlify

on:
  push:
    branches: [ "main", "rivista" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages-${{ github.ref }}"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history for accurate build info

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true

      - name: Setup Node.js (for additional processing if needed)
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install Node dependencies (if package.json exists)
        run: |
          if [ -f package.json ]; then
            npm ci
          else
            echo "No package.json found, skipping npm install"
          fi

      - name: Create Gemfile if missing
        run: |
          if [ ! -f Gemfile ]; then
            echo "Creating Gemfile..."
            cat > Gemfile << EOF
          source 'https://rubygems.org'
          
          gem 'jekyll', '~> 4.2.2'
          gem 'minima', '~> 2.5'
          gem 'jekyll-feed', '~> 0.12'
          gem 'jekyll-sitemap', '~> 1.4'
          gem 'jekyll-seo-tag', '~> 2.6'
          gem 'kramdown-parser-gfm', '~> 1.1'
          
          # Windows and JRuby does not include zoneinfo files, so bundle the tzinfo-data gem
          # and associated library.
          platforms :mingw, :x64_mingw, :mswin, :jruby do
            gem 'tzinfo', '~> 1.2'
            gem 'tzinfo-data'
          end
          
          # Performance-booster for watching directories on Windows
          gem 'wdm', '~> 0.1.1', :platforms => [:mingw, :x64_mingw, :mswin]
          
          # Lock `http_parser.rb` gem to `v0.6.x` on JRuby builds since newer versions of the gem
          # do not have a Java counterpart.
          gem 'http_parser.rb', '~> 0.6.0', :platforms => [:jruby]
          EOF
          fi

      - name: Install Ruby dependencies
        run: bundle install

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Build with Jekyll
        run: |
          # Build the site with Jekyll
          JEKYLL_ENV=production bundle exec jekyll build --destination ./_site
          
          # Create deployment info
          echo "Build completed at: $(date)" > ./_site/build-info.txt
          echo "Branch: ${{ github.ref_name }}" >> ./_site/build-info.txt
          echo "Commit: ${{ github.sha }}" >> ./_site/build-info.txt
          
          # Verify critical files exist
          echo "Verifying build..."
          ls -la ./_site/
          
          # Create .nojekyll file for GitHub Pages
          touch ./_site/.nojekyll

      - name: Upload artifact for GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./_site

      - name: Upload build for Netlify
        uses: actions/upload-artifact@v4
        with:
          name: netlify-build
          path: ./_site/
          retention-days: 1

  # Deploy to GitHub Pages
  deploy-github:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/rivista'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Deploy to Netlify (if configured)
  deploy-netlify:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/rivista'
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: netlify-build
          path: ./_site

      - name: Deploy to Netlify
        uses: netlify/actions/cli@master
        if: env.NETLIFY_AUTH_TOKEN != '' && env.NETLIFY_SITE_ID != ''
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        with:
          args: deploy --prod --dir=./_site --message="Deploy from GitHub Actions - ${{ github.ref_name }} - ${{ github.sha }}"

      - name: Skip Netlify deployment
        if: env.NETLIFY_AUTH_TOKEN == '' || env.NETLIFY_SITE_ID == ''
        run: |
          echo "Skipping Netlify deployment - secrets not configured"
          echo "To enable Netlify deployment, configure NETLIFY_AUTH_TOKEN and NETLIFY_SITE_ID secrets"

  # Deployment Summary
  deployment-summary:
    runs-on: ubuntu-latest
    needs: [build, deploy-github, deploy-netlify]
    if: always()
    steps:
      - name: Deployment Summary
        run: |
          echo "## Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Build Status" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Build**: ${{ needs.build.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Deployment Status" >> $GITHUB_STEP_SUMMARY
          echo "- **GitHub Pages**: ${{ needs.deploy-github.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Netlify**: ${{ needs.deploy-netlify.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Links" >> $GITHUB_STEP_SUMMARY
          echo "- [GitHub Pages](https://bioarchitettura.github.io/web/)" >> $GITHUB_STEP_SUMMARY
          if [[ "${{ needs.deploy-netlify.result }}" == "success" ]]; then
            echo "- [Netlify](https://your-site.netlify.app/)" >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "_Deployment completed at $(date)_" >> $GITHUB_STEP_SUMMARY